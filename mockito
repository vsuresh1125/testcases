
package com.dfs.callcenter.card.memos.pcso.connector;

import com.dfs.callcenter.card.memos.pcso.entity.QuickNote;
import com.dfs.callcenter.card.memos.pcso.repo.PCSORepository;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
class PCSORepositoryConnectorTest {

    @Mock
    private PCSORepository pcsoRepository;

    @InjectMocks
    private PCSORepositoryConnector pcsoRepositoryConnector;

    private QuickNote quickNote1;
    private QuickNote quickNote2;

    @BeforeEach
    void setUp() {
        quickNote1 = new QuickNote(1L, "Note 1", "Subject1");
        quickNote2 = new QuickNote(2L, "Note 2", "Subject2");
    }

    @Test
    void testGetAllQuickNotes() {
        // Arrange
        String[] cardTypeNbr = {"123", "456"};
        String subjectType = "Subject1";
        Integer subjectCode = 10;

        List<QuickNote> expectedNotes = Arrays.asList(quickNote1, quickNote2);

        // Mocking the repository method
        when(pcsoRepository.findBySubjectType(cardTypeNbr, subjectType, subjectCode)).thenReturn(expectedNotes);

        // Act
        List<QuickNote> result = pcsoRepositoryConnector.getAllQuickNotes(cardTypeNbr, subjectType, subjectCode);

        // Assert
        assertEquals(2, result.size());
        assertEquals(expectedNotes, result);

        // Verify that the repository method was called once
        verify(pcsoRepository, times(1)).findBySubjectType(cardTypeNbr, subjectType, subjectCode);
    }

    @Test
    void testGetAllQuickNotesWhenEmpty() {
        // Arrange
        String[] cardTypeNbr = {"123", "456"};
        String subjectType = "Subject1";
        Integer subjectCode = 10;

        // Return empty list when nothing found
        when(pcsoRepository.findBySubjectType(cardTypeNbr, subjectType, subjectCode)).thenReturn(Arrays.asList());

        // Act
        List<QuickNote> result = pcsoRepositoryConnector.getAllQuickNotes(cardTypeNbr, subjectType, subjectCode);

        // Assert
        assertEquals(0, result.size());

        // Verify that the repository method was called once
        verify(pcsoRepository, times(1)).findBySubjectType(cardTypeNbr, subjectType, subjectCode);
    }
}
